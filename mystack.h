#ifndef MYSTACK_H
#define MYSTACK_H

#include "singlylinkedlist.h"

//Пусть имеется арифметическое выражение, поддерживающее 4 вида скобок:
//(), [], {}, <>. Задача - проверить правильность расположения скобок в выражении
//Примеры:

//{(5-[3+<9>])-4} - правильное выражение {(>5-<[3+)9]-4} - неправильное выражение

//Задачу легко решить с помощью стека. Алгоритм следующий:
//необходимо выполнить проход по выражению слева направо. Если встречается
//открывающая скобка, то её нужно поместить в стек. Если встречается
//закрывающая скобка, то достаём элемент из стека, и поверяем форму скобки.
//Если формы разные или стек пуст, то это значит, что выражение неверное.
//Если к концу работы программы стек оказался не пуст, то это также означает,
//что выражение составлено неверно.

class MyStack
{
public:
    MyStack();


    void Clear();
    bool IsEmpty();
    bool IsFull();
    int GetCount();
    void Push(int number);
    int Pop();
    int Peek();
    bool Contains(int value);
    void PushLessValue(int value);
    void PushUnique(int value);

private:
    enum {
             SIZE = 10
           , EMPTY = 0
         };
    SinglyLinkedList _data;
    int _top;

};

#endif // MYSTACK_H
