#ifndef SINGLYLINKEDLIST_H
#define SINGLYLINKEDLIST_H

//7.1 Реализовать класс SinglyLinkedList, представляющий собой однонаправленный
//список для удобной работы с целыми числами типа int.

//В классе должно быть три поля:
//- указатель на начало списка (Node* head)
//- указатель на конец списка (Node* tail)
//- количество элементов списка (int count)

//Конструкторы:
//Не нужны.

//Методы (помимо уже существующих в примере):
//- IsEmpty (метод возвращает true, если count = 0, и false в обратном случае)
//- LastIndexOf (это не шутка  поиск последнего вхождения в список
//указанного в параметре значения. В результате работы вернуть индекс найденного
//элемента, а eсли ничего не найдено, вернуть минус 1)
//- Reverse (изменение порядка следования элементов в списке на противоположный)
//- SortAsc (сортировка значений элементов списка по возрастанию)
//- SortDesc (сортировка значений элементов списка по убыванию)
//- Shuffle (случайное перемешивание элементов списка)
//- Equals (в качестве параметра передаётся указатель на другой односвязный список.
//Метод сравнивает списки не только по количеству элементов, но и по их значениям)
//- Clone (метод создаёт точную копию односвязного списка и возвращает указатель
//на эту копию c типом SinglyLinkedList)
//- Contains (булевский метод, проверяет, а есть ли вообще в списке переданное
//в качестве параметра значение)
//- SetAt (метод устанавливает новое значение для элемента по указанному индексу)
//- ToArray (метод создаёт точную копию односвязного списка и возвращает указатель
//на эту копию, но не с типом SinglyLinkedList, а с типом int*)
//- MergeWith (метод присоединяет в конец текущего списка все элементы другого
//списка, ссылка на который передаётся как параметр)
//- перегрузка <, >, <=, >=, ==, !=
//- перегрузка =, конструктор копирования, деструктор
//- перегрузка [ ] – обращение к элементу по порядковому номеру
//- перегрузка + и += (конкатенация списков)
//- перегрузка операции явного преобразования в int*

//Каждый из вышеперечисленных методов должен быть хорошо протестирован!
//Коды всех тестов должны прилагаться в мейне.

class SinglyLinkedList
{
public:
    SinglyLinkedList();
};

#endif // SINGLYLINKEDLIST_H
